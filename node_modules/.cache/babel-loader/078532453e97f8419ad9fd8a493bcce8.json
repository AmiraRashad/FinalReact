{"ast":null,"code":"import Generic from \"./Generic\";\nimport jwt_decode from \"jwt-decode\";\n\nclass UserService extends Generic {\n  constructor() {\n    super();\n\n    this.login = (email, password) => new Promise((resolve, reject) => {\n      this.post(\"users/login\", {\n        email,\n        password\n      }).then(token => {\n        localStorage.setItem(\"token\", token);\n        resolve(token);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n\n    this.register = (name, email, password) => this.post(\"users/register\", {\n      password,\n      email,\n      name\n    });\n\n    this.logout = () => {\n      localStorage.removeItem(\"token\");\n    };\n\n    this.isLoggedin = () => {\n      return localStorage.getItem(\"token\") ? true : false;\n    };\n\n    this.getLoggedinUser = () => {\n      try {\n        const jwt = localStorage.getItem(\"token\");\n        return jwt_decode(jwt);\n      } catch (ex) {\n        return null;\n      }\n    };\n\n    this.isAdmin = () => {\n      if (this.isLoggedin()) {\n        if (this.getLoggedinUser().role == \"admin\") return true;else return false;\n      } else return false;\n    };\n  }\n\n}\n\nlet userService = new UserService();\nexport default userService;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/amiraweb/React/React-app/src/services/UserService.js"],"names":["Generic","jwt_decode","UserService","constructor","login","email","password","Promise","resolve","reject","post","then","token","localStorage","setItem","catch","err","register","name","logout","removeItem","isLoggedin","getItem","getLoggedinUser","jwt","ex","isAdmin","role","userService"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,MAAMC,WAAN,SAA0BF,OAA1B,CACA;AACIG,EAAAA,WAAW,GAAE;AAAE;;AAAF,SAEbC,KAFa,GAEN,CAACC,KAAD,EAAOC,QAAP,KAAmB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACpD,WAAKC,IAAL,CAAU,aAAV,EAAwB;AAACL,QAAAA,KAAD;AAAOC,QAAAA;AAAP,OAAxB,EAA0CK,IAA1C,CAA+CC,KAAK,IAAE;AAClDC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BF,KAA7B;AACAJ,QAAAA,OAAO,CAACI,KAAD,CAAP;AACC,OAHL,EAGOG,KAHP,CAGaC,GAAG,IAAE;AACVP,QAAAA,MAAM,CAACO,GAAD,CAAN;AACP,OALD;AAMH,KAPyB,CAFb;;AAAA,SAUbC,QAVa,GAUH,CAACC,IAAD,EAAMb,KAAN,EAAYC,QAAZ,KAAuB,KAAKI,IAAL,CAAU,gBAAV,EAA2B;AAACJ,MAAAA,QAAD;AAAUD,MAAAA,KAAV;AAAgBa,MAAAA;AAAhB,KAA3B,CAVpB;;AAAA,SAWbC,MAXa,GAWJ,MAAK;AACVN,MAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACH,KAbY;;AAAA,SAcbC,UAda,GAcA,MAAI;AACb,aAAOR,YAAY,CAACS,OAAb,CAAqB,OAArB,IAA8B,IAA9B,GAAqC,KAA5C;AACH,KAhBY;;AAAA,SAkBbC,eAlBa,GAkBK,MAAI;AAClB,UAAG;AACC,cAAMC,GAAG,GAAGX,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAZ;AACA,eAAOrB,UAAU,CAACuB,GAAD,CAAjB;AACH,OAHD,CAGC,OAAMC,EAAN,EAAS;AACN,eAAO,IAAP;AACH;AACJ,KAzBY;;AAAA,SA2BbC,OA3Ba,GA2BH,MAAI;AACV,UAAG,KAAKL,UAAL,EAAH,EACA;AACI,YAAG,KAAKE,eAAL,GAAuBI,IAAvB,IAA6B,OAAhC,EAAyC,OAAO,IAAP,CAAzC,KACK,OAAO,KAAP;AACR,OAJD,MAIO,OAAO,KAAP;AACV,KAjCY;AAAW;;AAD5B;;AAqCA,IAAIC,WAAW,GAAG,IAAI1B,WAAJ,EAAlB;AACA,eAAe0B,WAAf","sourcesContent":["import Generic from \"./Generic\";\r\nimport jwt_decode from \"jwt-decode\";\r\nclass UserService extends Generic\r\n{\r\n    constructor(){ super();}\r\n\r\n    login =(email,password)=> new Promise((resolve,reject)=>{\r\n        this.post(\"users/login\",{email,password}).then(token=>{\r\n            localStorage.setItem(\"token\",token);\r\n            resolve(token);\r\n            }).catch(err=>{\r\n                reject(err);\r\n        })\r\n    }); \r\n    register =(name,email,password)=>this.post(\"users/register\",{password,email,name});\r\n    logout = ()=> {\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n    isLoggedin = ()=>{\r\n        return localStorage.getItem(\"token\")?true : false;\r\n    }\r\n\r\n    getLoggedinUser = ()=>{\r\n        try{\r\n            const jwt = localStorage.getItem(\"token\");\r\n            return jwt_decode(jwt);\r\n        }catch(ex){\r\n            return null\r\n        }\r\n    };\r\n\r\n    isAdmin = ()=>{\r\n        if(this.isLoggedin())\r\n        {\r\n            if(this.getLoggedinUser().role==\"admin\") return true;\r\n            else return false;\r\n        } else return false;\r\n    }\r\n}\r\n\r\nlet userService = new UserService();\r\nexport default userService;"]},"metadata":{},"sourceType":"module"}